@page "/staff"
@inject ISessionStorageService SessionStorage
@inject NavigationManager Navigation
@rendermode InteractiveServer
@if (IsAuthorized)
{
    <div class="d-flex flex-column vh-100">
        @* <!-- Navigation Bar --> *@
        @* <div class="bg-dark text-white py-3 d-flex justify-content-center"> *@
        @*     <div class="d-flex gap-3"> *@
        @*         <button class="btn btn-primary" @onclick="@(() => NavigateTo("/staff/categorypages"))">Categories</button> *@
        @*         <button class="btn btn-secondary" @onclick="@(() => NavigateTo("/staff/newsarticles"))">News</button> *@
        @*         <button class="btn btn-primary" @onclick="@(() => NavigateTo("/staff/updateprofile"))">Profiles</button> *@
        @*         <button class="btn btn-success" @onclick="@(() => NavigateTo("/staff/myarticles"))">My Articles</button> *@
        @*         <button class="btn btn-danger" @onclick="Logout"> *@
        @*             <i class="bi bi-box-arrow-right"></i> Logout *@
        @*         </button> *@

        @*     </div> *@
        @* </div> *@

        <div class="flex-grow-1 d-flex justify-content-center align-items-center">
            <div class="text-center">
                <h1 class="text-primary">Welcome</h1>
                <p class="text-muted">Select an option to proceed.</p>
            </div>
        </div>
    </div>
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
@code {
    private bool IsAuthorized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var accountRole = await SessionStorage.GetItemAsync<int?>("AccountRole");
            if (accountRole != 1)
            {
                NavigateTo("/error");
            }
            else
            {
                IsAuthorized = true;
                StateHasChanged();
            }
        }
    }

    private void NavigateTo(string url)
    {
        Navigation.NavigateTo(url);
    }
    private async Task Logout()
    {
        await SessionStorage.RemoveItemAsync("AccountId");
        await SessionStorage.RemoveItemAsync("AccountEmail");
        await SessionStorage.RemoveItemAsync("AccountRole");

        Navigation.NavigateTo("/login", forceLoad: true);
    }
}
